{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Calendar as BigCalendar, momentLocalizer } from 'react-big-Calendar';\nimport moment from 'moment';\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop';\nmoment.locale(\"en\");\nvar localizer = momentLocalizer(moment);\nvar DragAndDropCalendar = withDragAndDrop(BigCalendar);\n\nvar calendar_big = /*#__PURE__*/function (_Component) {\n  _inherits(calendar_big, _Component);\n\n  var _super = _createSuper(calendar_big);\n\n  function calendar_big() {\n    var _this;\n\n    _classCallCheck(this, calendar_big);\n\n    _this = _super.call(this); //const now = new Date();\n\n    var events = [{\n      id: 0,\n      title: '2nd Grade Science, Topic: Changes in Properties',\n      start: new Date(2020, 7, 3, 8, 0, 0),\n      end: new Date(2020, 7, 3, 8, 55, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 1,\n      title: '3rd Grade Science, Topic: State of Water',\n      start: new Date(2020, 7, 10, 9, 0, 0),\n      end: new Date(2020, 7, 10, 10, 30, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 2,\n      title: '4th Grade Science, Topic: Energy',\n      start: new Date(2020, 7, 17, 11, 0, 0),\n      end: new Date(2020, 7, 17, 12, 30, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 3,\n      title: '5th Grade Science,  Topic: Experimenting with Forces',\n      start: new Date(2020, 7, 24, 13, 0, 0),\n      end: new Date(2020, 7, 24, 14, 30, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 4,\n      title: '2nd Grade Science, Topic: Changes in Properties',\n      start: new Date(2020, 7, 4, 8, 0, 0),\n      end: new Date(2020, 7, 4, 8, 55, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 5,\n      title: '3rd Grade Science, Topic: Forms of Energy',\n      start: new Date(2020, 7, 11, 9, 0, 0),\n      end: new Date(2020, 7, 11, 10, 30, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 6,\n      title: '4th Grade Science, Topic: Heat Flow',\n      start: new Date(2020, 7, 18, 11, 0, 0),\n      end: new Date(2020, 7, 18, 12, 30, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 7,\n      title: '5th Grade Science, Topic: Mixtures',\n      start: new Date(2020, 7, 25, 13, 0, 0),\n      end: new Date(2020, 7, 25, 14, 30, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 8,\n      title: '2nd Grade Science, Topic: Magnets and Gravity',\n      start: new Date(2020, 7, 5, 8, 0, 0),\n      end: new Date(2020, 7, 5, 8, 55, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 9,\n      title: '3rd Grade Science, Topic: Light',\n      start: new Date(2020, 7, 12, 9, 0, 0),\n      end: new Date(2020, 7, 12, 10, 30, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 10,\n      title: '4th Grade Science, Topic: Energy in a Food Chain',\n      start: new Date(2020, 7, 19, 11, 0, 0),\n      end: new Date(2020, 7, 19, 12, 30, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 11,\n      title: '5th Grade Science, Topic: Electric Circuits',\n      start: new Date(2020, 7, 26, 13, 0, 0),\n      end: new Date(2020, 7, 26, 14, 30, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 12,\n      title: '2nd Grade Science, Topic: Distinguishing Body Parts',\n      start: new Date(2020, 7, 6, 8, 0, 0),\n      end: new Date(2020, 7, 6, 8, 55, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 13,\n      title: '3rd Grade Science, Topic: Classifying Matter',\n      start: new Date(2020, 7, 13, 9, 0, 0),\n      end: new Date(2020, 7, 13, 10, 30, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 14,\n      title: '4th Grade Science, Topic: Earthâ€™s Movements',\n      start: new Date(2020, 7, 20, 11, 0, 0),\n      end: new Date(2020, 7, 20, 12, 30, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 15,\n      title: '5th Grade Science, Topic: Adaptions',\n      start: new Date(2020, 7, 27, 13, 0, 0),\n      end: new Date(2020, 7, 27, 14, 30, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 16,\n      title: '2nd Grade Science, Topic: Life Cycles',\n      start: new Date(2020, 7, 7, 8, 0, 0),\n      end: new Date(2020, 7, 7, 8, 55, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 17,\n      title: '3rd Grade Science, Topic: Classifying Animals',\n      start: new Date(2020, 7, 14, 9, 0, 0),\n      end: new Date(2020, 7, 14, 10, 30, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 18,\n      title: '4th Grade Science, Topic: Classifying Rocks',\n      start: new Date(2020, 7, 21, 11, 0, 0),\n      end: new Date(2020, 7, 21, 12, 30, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }, {\n      id: 19,\n      title: '5th Grade Science, Topic: Human Organs',\n      start: new Date(2020, 7, 28, 13, 0, 0),\n      end: new Date(2020, 7, 28, 14, 30, 0),\n      borderColor: '#d2f0ff',\n      backgroundColor: '#d2f0ff',\n      textColor: '#333'\n    }];\n    _this.state = {\n      name: 'React',\n      events: events\n    };\n    _this.onEventDrop = _this.onEventDrop.bind(_assertThisInitialized(_this));\n    _this.onEventResize = _this.onEventResize.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(calendar_big, [{\n    key: \"onEventResize\",\n    value: function onEventResize(_ref) {\n      var event = _ref.event,\n          start = _ref.start,\n          end = _ref.end;\n      var events = this.state.events;\n      var nextEvents = events.map(function (existingEvent) {\n        return existingEvent.id === event.id ? _objectSpread(_objectSpread({}, existingEvent), {}, {\n          start: start,\n          end: end\n        }) : existingEvent;\n      });\n      this.setState({\n        events: nextEvents\n      });\n    }\n  }, {\n    key: \"onEventDrop\",\n    value: function onEventDrop(_ref2) {\n      var event = _ref2.event,\n          start = _ref2.start,\n          end = _ref2.end;\n      var events = this.state.events;\n      var idx = events.indexOf(event);\n\n      var updatedEvent = _objectSpread(_objectSpread({}, event), {}, {\n        start: start,\n        end: end\n      });\n\n      var nextEvents = _toConsumableArray(events);\n\n      nextEvents.splice(idx, 1, updatedEvent);\n      this.setState({\n        events: nextEvents\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        style: {\n          height: 200\n        }\n      }, __jsx(DragAndDropCalendar, {\n        events: this.state.events,\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        defaultDate: new Date(2020, 7, 2),\n        defaultView: \"week\",\n        localizer: localizer,\n        formats: {\n          dayFormat: 'ddd D/M'\n        },\n        views: {\n          week: true\n        },\n        resizable: true,\n        selectable: true,\n        onEventDrop: this.onEventDrop,\n        onEventResize: this.onEventResize\n      }));\n    }\n  }]);\n\n  return calendar_big;\n}(Component);\n\nexport default calendar_big;","map":null,"metadata":{},"sourceType":"module"}