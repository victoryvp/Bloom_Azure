{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\n\nconst Nav = props => {\n  const viewList = props.views;\n\n  const handleClick = e => {\n    const target = e.target;\n\n    if (target && target.parentNode) {\n      console.log(\"setting active class... for targetSiblings\");\n      console.log(\"props.cssClasses... : \", props.cssClasses);\n      const targetSiblingListItems = Array.from(target.parentNode.parentNode.childNodes);\n      const targetSiblingAnchors = targetSiblingListItems.map(li => li.childNodes[0]);\n      targetSiblingAnchors.forEach((navItemAnchor, index) => {\n        navItemAnchor.classList.remove(props.cssClasses.activeClass);\n      });\n      target.classList.add(props.cssClasses.activeClass);\n    }\n\n    props.changeView(e.target.dataset.id);\n  };\n\n  return viewList.map((viewItem, index) => __jsx(\"li\", {\n    className: \"nav-item\"\n  }, __jsx(\"a\", {\n    className: \"nav-link text-uppercase\" + (index === 0 ? \" \" + props.cssClasses.activeClass : \"\"),\n    key: viewItem.id,\n    id: viewItem.id,\n    \"data-toggle\": \"tab\",\n    role: \"tab\",\n    \"aria-controls\": \"intro\",\n    \"aria-selected\": \"true\",\n    name: viewItem.name,\n    \"data-id\": viewItem.id,\n    onClick: handleClick\n  }, viewItem.name)));\n};\n\nexport default Nav;","map":null,"metadata":{},"sourceType":"module"}