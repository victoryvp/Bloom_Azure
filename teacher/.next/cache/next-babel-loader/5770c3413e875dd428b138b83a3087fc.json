{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\n\nvar Nav = function Nav(props) {\n  var viewList = props.views;\n\n  var handleClick = function handleClick(e) {\n    var target = e.target;\n\n    if (target && target.parentNode) {\n      console.log(\"setting active class... for targetSiblings\");\n      console.log(\"props.cssClasses... : \", props.cssClasses);\n      var targetSiblingListItems = Array.from(target.parentNode.parentNode.childNodes);\n      var targetSiblingAnchors = targetSiblingListItems.map(function (li) {\n        return li.childNodes[0];\n      });\n      targetSiblingAnchors.forEach(function (navItemAnchor, index) {\n        navItemAnchor.classList.remove(props.cssClasses.activeClass);\n      });\n      target.classList.add(props.cssClasses.activeClass);\n    }\n\n    props.changeView(e.target.dataset.id);\n  };\n\n  return viewList.map(function (viewItem, index) {\n    return __jsx(\"li\", {\n      className: \"nav-item\"\n    }, __jsx(\"a\", {\n      className: \"nav-link text-uppercase\" + (index === 0 ? \" \" + props.cssClasses.activeClass : \"\"),\n      key: viewItem.id,\n      id: viewItem.id,\n      \"data-toggle\": \"tab\",\n      role: \"tab\",\n      \"aria-controls\": \"intro\",\n      \"aria-selected\": \"true\",\n      name: viewItem.name,\n      \"data-id\": viewItem.id,\n      onClick: handleClick\n    }, viewItem.name));\n  });\n};\n\nexport default Nav;","map":null,"metadata":{},"sourceType":"module"}