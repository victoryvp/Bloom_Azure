{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useRef } from 'react';\nimport TeacherLayout from '../../layout/TeacherLayout';\nimport { FiLock } from 'react-icons/fi';\nimport React from 'react';\nexport default function grade_assignment(props) {\n  var data = [{\n    AssignmentName: \"Energy\",\n    Standard: \"TXK-1A\",\n    DueDate: \"31st July 2020\",\n    status: \"To Be Graded\"\n  }, {\n    AssignmentName: \"Weight & Scale\",\n    Standard: \"TXK-2A\",\n    DueDate: \"31st July 2020\",\n    status: \"Completed\"\n  }, {\n    AssignmentName: \"Photosynthesis\",\n    Standard: \"TXK-1A\",\n    DueDate: \"31st July 2020\",\n    status: \"Completed\"\n  }, {\n    AssignmentName: \"Photons\",\n    Standard: \"TXK-1A\",\n    DueDate: \"31st July 2020\",\n    status: \"Pending\"\n  }];\n\n  var _useState = useState(data),\n      assignment = _useState[0],\n      setAssignment = _useState[1];\n\n  useEffect(function () {\n    getData(); //setAssignment(assignment)\n  }, []);\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setAssignment(assignment);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var changeStatus = function changeStatus(val) {\n    if (val == 'Show All') {\n      setAssignment(data);\n    } else {\n      var statusVal = data.filter(function (data) {\n        return data.status == val;\n      });\n      setAssignment(statusVal);\n    }\n  };\n\n  var renderHeader = function renderHeader() {\n    var headerElement = ['Assignment Name', 'Standard', 'Due Date']; // return headerElement.map((AssignmentName, Standard, DueDate)=> {\n\n    return __jsx(\"tr\", null, __jsx(\"th\", {\n      className: \"textcenter\",\n      style: {\n        textAlign: 'left'\n      }\n    }, \"Assignment Name \"), __jsx(\"th\", {\n      className: \"textcenter\",\n      style: {\n        textAlign: 'left'\n      }\n    }, \" Standard\"), __jsx(\"th\", {\n      className: \"textcenter\",\n      style: {\n        textAlign: 'left'\n      }\n    }, \"DueDate\"), __jsx(\"th\", {\n      className: \"textcenter\",\n      style: {\n        textAlign: 'left'\n      }\n    }, __jsx(\"select\", {\n      className: \"form-control\",\n      style: {\n        borderRadius: '0 px',\n        padding: '7px 19px',\n        height: 'auto'\n      },\n      onChange: function onChange() {\n        return changeStatus(event.target.value);\n      }\n    }, __jsx(\"option\", {\n      value: \"Show All\"\n    }, \"Show All\"), __jsx(\"option\", {\n      value: \"To Be Graded\"\n    }, \"To Be Graded\"), __jsx(\"option\", {\n      value: \"Completed\"\n    }, \"Completed\"), __jsx(\"option\", {\n      value: \"Pending\"\n    }, \"Pending\"))));\n  };\n\n  var renderBody = function renderBody() {\n    return assignment && assignment.map(function (_ref2) {\n      var AssignmentName = _ref2.AssignmentName,\n          Standard = _ref2.Standard,\n          DueDate = _ref2.DueDate,\n          status = _ref2.status;\n      return __jsx(\"tr\", {\n        key: AssignmentName,\n        className: AssignmentName != 'Energy' ? \"disablecursortable disablecolor completed\" : \"graded\"\n      }, __jsx(\"td\", {\n        className: \"textcenter\",\n        style: {\n          verticalAlign: 'middle',\n          textAlign: 'left'\n        }\n      }, __jsx(\"i\", {\n        className: \"feather icon-lock f-20 tablelockicon\"\n      }, AssignmentName != 'Energy' ? __jsx(FiLock, null) : null), AssignmentName), __jsx(\"td\", {\n        className: \"textcenter\",\n        style: {\n          verticalAlign: 'middle',\n          textAlign: 'left'\n        }\n      }, Standard), __jsx(\"td\", {\n        className: \"textcenter\",\n        style: {\n          verticalAlign: 'middle',\n          textAlign: 'left'\n        }\n      }, DueDate), __jsx(\"td\", {\n        className: \"textcenter\",\n        style: {\n          verticalAlign: 'middle',\n          textAlign: 'left'\n        }\n      }, status, \" \"));\n    });\n  };\n\n  return __jsx(TeacherLayout, props, __jsx(\"div\", {\n    className: \"pcoded-main-container\"\n  }, __jsx(\"div\", {\n    className: \"pcoded-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"pcoded-content\"\n  }, __jsx(\"div\", {\n    className: \"pcoded-inner-content\"\n  }, __jsx(\"div\", {\n    className: \"page-header\"\n  }, __jsx(\"div\", {\n    className: \"page-block\"\n  }, __jsx(\"div\", {\n    className: \"row align-items-center\"\n  }, __jsx(\"div\", {\n    className: \"col-md-12\"\n  }, __jsx(\"ul\", {\n    className: \"breadcrumb\"\n  }, __jsx(\"li\", {\n    className: \"breadcrumb-item\"\n  }, __jsx(\"a\", {\n    href: \"#!\",\n    style: {\n      color: '#888'\n    }\n  }, \"My Classes\")), __jsx(\"li\", {\n    className: \"breadcrumb-item\"\n  }, __jsx(\"a\", {\n    href: \"#!\",\n    style: {\n      color: '#888'\n    }\n  }, \"Science 2nd Grade\"))))))), __jsx(\"div\", {\n    className: \"main-body\"\n  }, __jsx(\"div\", {\n    className: \"page-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-sm-12\"\n  }, __jsx(\"div\", {\n    className: \"card\"\n  }, __jsx(\"div\", {\n    className: \"card-header\"\n  }, __jsx(\"h5\", null, \"Assignments\")), __jsx(\"div\", {\n    className: \"card-block\"\n  }, __jsx(\"div\", {\n    className: \"table-responsive\"\n  }, __jsx(\"table\", {\n    id: \"\",\n    className: \"display table nowrap table-striped table-hover\",\n    style: {\n      width: '100%'\n    }\n  }, __jsx(\"thead\", null, renderHeader()), __jsx(\"tbody\", null, renderBody()))))))))))))));\n}","map":null,"metadata":{},"sourceType":"module"}